/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.31
 * 
 * This file is not intended to be easily readable and contains a number of 
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG 
 * interface file instead. 
 * ----------------------------------------------------------------------------- */

/*
  +----------------------------------------------------------------------+
  | PHP version 4.0                                                      |
  +----------------------------------------------------------------------+
  | Copyright (c) 1997, 1998, 1999, 2000, 2001 The PHP Group             |
  +----------------------------------------------------------------------+
  | This source file is subject to version 2.02 of the PHP license,      |
  | that is bundled with this package in the file LICENSE, and is        |
  | available at through the world-wide-web at                           |
  | http://www.php.net/license/2_02.txt.                                 |
  | If you did not receive a copy of the PHP license and are unable to   |
  | obtain it through the world-wide-web, please send a note to          |
  | license@php.net so we can mail you a copy immediately.               |
  +----------------------------------------------------------------------+
  | Authors:                                                             |
  |                                                                      |
  +----------------------------------------------------------------------+
 */


#ifndef PHP_SCALIENDB_CLIENT_H
#define PHP_SCALIENDB_CLIENT_H

extern zend_module_entry scaliendb_client_module_entry;
#define phpext_scaliendb_client_ptr &scaliendb_client_module_entry

#ifdef PHP_WIN32
# define PHP_SCALIENDB_CLIENT_API __declspec(dllexport)
#else
# define PHP_SCALIENDB_CLIENT_API
#endif

#ifdef ZTS
#include "TSRM.h"
#endif

PHP_MINIT_FUNCTION(scaliendb_client);
PHP_MSHUTDOWN_FUNCTION(scaliendb_client);
PHP_RINIT_FUNCTION(scaliendb_client);
PHP_RSHUTDOWN_FUNCTION(scaliendb_client);
PHP_MINFO_FUNCTION(scaliendb_client);

ZEND_NAMED_FUNCTION(_wrap_imaxdiv_t_quot_set);
ZEND_NAMED_FUNCTION(_wrap_imaxdiv_t_quot_get);
ZEND_NAMED_FUNCTION(_wrap_imaxdiv_t_rem_set);
ZEND_NAMED_FUNCTION(_wrap_imaxdiv_t_rem_get);
ZEND_NAMED_FUNCTION(_wrap_new_imaxdiv_t);
ZEND_NAMED_FUNCTION(_wrap_imaxabs);
ZEND_NAMED_FUNCTION(_wrap_imaxdiv);
ZEND_NAMED_FUNCTION(_wrap_strtoimax);
ZEND_NAMED_FUNCTION(_wrap_strtoumax);
ZEND_NAMED_FUNCTION(_wrap_new_SDBP_NodeParams);
ZEND_NAMED_FUNCTION(_wrap_SDBP_NodeParams_Close);
ZEND_NAMED_FUNCTION(_wrap_SDBP_NodeParams_AddNode);
ZEND_NAMED_FUNCTION(_wrap_SDBP_NodeParams_nodec_set);
ZEND_NAMED_FUNCTION(_wrap_SDBP_NodeParams_nodec_get);
ZEND_NAMED_FUNCTION(_wrap_SDBP_NodeParams_nodes_set);
ZEND_NAMED_FUNCTION(_wrap_SDBP_NodeParams_nodes_get);
ZEND_NAMED_FUNCTION(_wrap_SDBP_NodeParams_num_set);
ZEND_NAMED_FUNCTION(_wrap_SDBP_NodeParams_num_get);
ZEND_NAMED_FUNCTION(_wrap_new_SDBP_Buffer);
ZEND_NAMED_FUNCTION(_wrap_SDBP_Buffer_SetBuffer);
ZEND_NAMED_FUNCTION(_wrap_SDBP_Buffer_data_set);
ZEND_NAMED_FUNCTION(_wrap_SDBP_Buffer_data_get);
ZEND_NAMED_FUNCTION(_wrap_SDBP_Buffer_len_set);
ZEND_NAMED_FUNCTION(_wrap_SDBP_Buffer_len_get);
ZEND_NAMED_FUNCTION(_wrap_SDBP_ResultClose);
ZEND_NAMED_FUNCTION(_wrap_SDBP_ResultKey);
ZEND_NAMED_FUNCTION(_wrap_SDBP_ResultValue);
ZEND_NAMED_FUNCTION(_wrap_SDBP_ResultKeyBuffer);
ZEND_NAMED_FUNCTION(_wrap_SDBP_ResultValueBuffer);
ZEND_NAMED_FUNCTION(_wrap_SDBP_ResultSignedNumber);
ZEND_NAMED_FUNCTION(_wrap_SDBP_ResultNumber);
ZEND_NAMED_FUNCTION(_wrap_SDBP_ResultIsConditionalSuccess);
ZEND_NAMED_FUNCTION(_wrap_SDBP_ResultDatabaseID);
ZEND_NAMED_FUNCTION(_wrap_SDBP_ResultTableID);
ZEND_NAMED_FUNCTION(_wrap_SDBP_ResultBegin);
ZEND_NAMED_FUNCTION(_wrap_SDBP_ResultNext);
ZEND_NAMED_FUNCTION(_wrap_SDBP_ResultIsEnd);
ZEND_NAMED_FUNCTION(_wrap_SDBP_ResultIsFinished);
ZEND_NAMED_FUNCTION(_wrap_SDBP_ResultTransportStatus);
ZEND_NAMED_FUNCTION(_wrap_SDBP_ResultCommandStatus);
ZEND_NAMED_FUNCTION(_wrap_SDBP_ResultNumNodes);
ZEND_NAMED_FUNCTION(_wrap_SDBP_ResultNodeID);
ZEND_NAMED_FUNCTION(_wrap_SDBP_ResultElapsedTime);
ZEND_NAMED_FUNCTION(_wrap_SDBP_Create);
ZEND_NAMED_FUNCTION(_wrap_SDBP_Init);
ZEND_NAMED_FUNCTION(_wrap_SDBP_Destroy);
ZEND_NAMED_FUNCTION(_wrap_SDBP_GetResult);
ZEND_NAMED_FUNCTION(_wrap_SDBP_SetGlobalTimeout);
ZEND_NAMED_FUNCTION(_wrap_SDBP_SetMasterTimeout);
ZEND_NAMED_FUNCTION(_wrap_SDBP_GetGlobalTimeout);
ZEND_NAMED_FUNCTION(_wrap_SDBP_GetMasterTimeout);
ZEND_NAMED_FUNCTION(_wrap_SDBP_GetCurrentDatabaseID);
ZEND_NAMED_FUNCTION(_wrap_SDBP_GetCurrentTableID);
ZEND_NAMED_FUNCTION(_wrap_SDBP_GetJSONConfigState);
ZEND_NAMED_FUNCTION(_wrap_SDBP_WaitConfigState);
ZEND_NAMED_FUNCTION(_wrap_SDBP_SetBatchLimit);
ZEND_NAMED_FUNCTION(_wrap_SDBP_SetBulkLoading);
ZEND_NAMED_FUNCTION(_wrap_SDBP_SetConsistencyLevel);
ZEND_NAMED_FUNCTION(_wrap_SDBP_CreateQuorum);
ZEND_NAMED_FUNCTION(_wrap_SDBP_RenameQuorum);
ZEND_NAMED_FUNCTION(_wrap_SDBP_DeleteQuorum);
ZEND_NAMED_FUNCTION(_wrap_SDBP_AddNode);
ZEND_NAMED_FUNCTION(_wrap_SDBP_RemoveNode);
ZEND_NAMED_FUNCTION(_wrap_SDBP_ActivateNode);
ZEND_NAMED_FUNCTION(_wrap_SDBP_CreateDatabase);
ZEND_NAMED_FUNCTION(_wrap_SDBP_RenameDatabase);
ZEND_NAMED_FUNCTION(_wrap_SDBP_DeleteDatabase);
ZEND_NAMED_FUNCTION(_wrap_SDBP_CreateTable);
ZEND_NAMED_FUNCTION(_wrap_SDBP_RenameTable);
ZEND_NAMED_FUNCTION(_wrap_SDBP_DeleteTable);
ZEND_NAMED_FUNCTION(_wrap_SDBP_TruncateTable);
ZEND_NAMED_FUNCTION(_wrap_SDBP_SplitShard);
ZEND_NAMED_FUNCTION(_wrap_SDBP_SplitShardAuto);
ZEND_NAMED_FUNCTION(_wrap_SDBP_FreezeTable);
ZEND_NAMED_FUNCTION(_wrap_SDBP_UnfreezeTable);
ZEND_NAMED_FUNCTION(_wrap_SDBP_MigrateShard);
ZEND_NAMED_FUNCTION(_wrap_SDBP_GetDatabaseID);
ZEND_NAMED_FUNCTION(_wrap_SDBP_GetDatabaseName);
ZEND_NAMED_FUNCTION(_wrap_SDBP_GetTableID);
ZEND_NAMED_FUNCTION(_wrap_SDBP_UseDatabase);
ZEND_NAMED_FUNCTION(_wrap_SDBP_UseDatabaseID);
ZEND_NAMED_FUNCTION(_wrap_SDBP_UseTable);
ZEND_NAMED_FUNCTION(_wrap_SDBP_UseTableID);
ZEND_NAMED_FUNCTION(_wrap_SDBP_GetNumQuorums);
ZEND_NAMED_FUNCTION(_wrap_SDBP_GetQuorumIDAt);
ZEND_NAMED_FUNCTION(_wrap_SDBP_GetQuorumNameAt);
ZEND_NAMED_FUNCTION(_wrap_SDBP_GetNumDatabases);
ZEND_NAMED_FUNCTION(_wrap_SDBP_GetDatabaseIDAt);
ZEND_NAMED_FUNCTION(_wrap_SDBP_GetDatabaseNameAt);
ZEND_NAMED_FUNCTION(_wrap_SDBP_GetNumTables);
ZEND_NAMED_FUNCTION(_wrap_SDBP_GetTableIDAt);
ZEND_NAMED_FUNCTION(_wrap_SDBP_GetTableNameAt);
ZEND_NAMED_FUNCTION(_wrap_SDBP_GetNumShards);
ZEND_NAMED_FUNCTION(_wrap_SDBP_GetShardIDAt);
ZEND_NAMED_FUNCTION(_wrap_SDBP_Get);
ZEND_NAMED_FUNCTION(_wrap_SDBP_GetCStr);
ZEND_NAMED_FUNCTION(_wrap_SDBP_Set);
ZEND_NAMED_FUNCTION(_wrap_SDBP_SetCStr);
ZEND_NAMED_FUNCTION(_wrap_SDBP_SetIfNotExists);
ZEND_NAMED_FUNCTION(_wrap_SDBP_SetIfNotExistsCStr);
ZEND_NAMED_FUNCTION(_wrap_SDBP_TestAndSet);
ZEND_NAMED_FUNCTION(_wrap_SDBP_TestAndSetCStr);
ZEND_NAMED_FUNCTION(_wrap_SDBP_GetAndSet);
ZEND_NAMED_FUNCTION(_wrap_SDBP_GetAndSetCStr);
ZEND_NAMED_FUNCTION(_wrap_SDBP_Add);
ZEND_NAMED_FUNCTION(_wrap_SDBP_AddCStr);
ZEND_NAMED_FUNCTION(_wrap_SDBP_Append);
ZEND_NAMED_FUNCTION(_wrap_SDBP_AppendCStr);
ZEND_NAMED_FUNCTION(_wrap_SDBP_Delete);
ZEND_NAMED_FUNCTION(_wrap_SDBP_DeleteCStr);
ZEND_NAMED_FUNCTION(_wrap_SDBP_TestAndDelete);
ZEND_NAMED_FUNCTION(_wrap_SDBP_TestAndDeleteCStr);
ZEND_NAMED_FUNCTION(_wrap_SDBP_Remove);
ZEND_NAMED_FUNCTION(_wrap_SDBP_RemoveCStr);
ZEND_NAMED_FUNCTION(_wrap_SDBP_ListKeys);
ZEND_NAMED_FUNCTION(_wrap_SDBP_ListKeysCStr);
ZEND_NAMED_FUNCTION(_wrap_SDBP_ListKeyValues);
ZEND_NAMED_FUNCTION(_wrap_SDBP_ListKeyValuesCStr);
ZEND_NAMED_FUNCTION(_wrap_SDBP_Count);
ZEND_NAMED_FUNCTION(_wrap_SDBP_CountCStr);
ZEND_NAMED_FUNCTION(_wrap_SDBP_Begin);
ZEND_NAMED_FUNCTION(_wrap_SDBP_Submit);
ZEND_NAMED_FUNCTION(_wrap_SDBP_Cancel);
ZEND_NAMED_FUNCTION(_wrap_SDBP_IsBatched);
ZEND_NAMED_FUNCTION(_wrap_SDBP_SetTrace);
ZEND_NAMED_FUNCTION(_wrap_SDBP_GetVersion);
ZEND_NAMED_FUNCTION(_wrap_SDBP_GetDebugString);
#endif /* PHP_SCALIENDB_CLIENT_H */
