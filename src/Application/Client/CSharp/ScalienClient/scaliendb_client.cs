/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.31
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace Scalien {

using System;
using System.Runtime.InteropServices;

public class scaliendb_client {
  public static long imaxabs(long n) {
    long ret = scaliendb_clientPINVOKE.imaxabs(n);
    return ret;
  }

  public static imaxdiv_t imaxdiv(long numer, long denom) {
    imaxdiv_t ret = new imaxdiv_t(scaliendb_clientPINVOKE.imaxdiv(numer, denom), true);
    return ret;
  }

  public static long strtoimax(string nptr, SWIGTYPE_p_p_char endptr, int arg2) {
    long ret = scaliendb_clientPINVOKE.strtoimax(nptr, SWIGTYPE_p_p_char.getCPtr(endptr), arg2);
    return ret;
  }

  public static ulong strtoumax(string nptr, SWIGTYPE_p_p_char endptr, int arg2) {
    ulong ret = scaliendb_clientPINVOKE.strtoumax(nptr, SWIGTYPE_p_p_char.getCPtr(endptr), arg2);
    return ret;
  }

  public static void SDBP_ResultClose(SWIGTYPE_p_void result) {
    scaliendb_clientPINVOKE.SDBP_ResultClose(SWIGTYPE_p_void.getCPtr(result));
  }

  public static string SDBP_ResultKey(SWIGTYPE_p_void result) {
    string ret = scaliendb_clientPINVOKE.SDBP_ResultKey(SWIGTYPE_p_void.getCPtr(result));
    return ret;
  }

  public static string SDBP_ResultValue(SWIGTYPE_p_void result) {
    string ret = scaliendb_clientPINVOKE.SDBP_ResultValue(SWIGTYPE_p_void.getCPtr(result));
    return ret;
  }

  public static SDBP_Buffer SDBP_ResultKeyBuffer(SWIGTYPE_p_void result) {
    SDBP_Buffer ret = new SDBP_Buffer(scaliendb_clientPINVOKE.SDBP_ResultKeyBuffer(SWIGTYPE_p_void.getCPtr(result)), true);
    return ret;
  }

  public static SDBP_Buffer SDBP_ResultValueBuffer(SWIGTYPE_p_void result) {
    SDBP_Buffer ret = new SDBP_Buffer(scaliendb_clientPINVOKE.SDBP_ResultValueBuffer(SWIGTYPE_p_void.getCPtr(result)), true);
    return ret;
  }

  public static long SDBP_ResultSignedNumber(SWIGTYPE_p_void result) {
    long ret = scaliendb_clientPINVOKE.SDBP_ResultSignedNumber(SWIGTYPE_p_void.getCPtr(result));
    return ret;
  }

  public static ulong SDBP_ResultNumber(SWIGTYPE_p_void result) {
    ulong ret = scaliendb_clientPINVOKE.SDBP_ResultNumber(SWIGTYPE_p_void.getCPtr(result));
    return ret;
  }

  public static bool SDBP_ResultIsConditionalSuccess(SWIGTYPE_p_void result) {
    bool ret = scaliendb_clientPINVOKE.SDBP_ResultIsConditionalSuccess(SWIGTYPE_p_void.getCPtr(result));
    return ret;
  }

  public static ulong SDBP_ResultDatabaseID(SWIGTYPE_p_void result) {
    ulong ret = scaliendb_clientPINVOKE.SDBP_ResultDatabaseID(SWIGTYPE_p_void.getCPtr(result));
    return ret;
  }

  public static ulong SDBP_ResultTableID(SWIGTYPE_p_void result) {
    ulong ret = scaliendb_clientPINVOKE.SDBP_ResultTableID(SWIGTYPE_p_void.getCPtr(result));
    return ret;
  }

  public static void SDBP_ResultBegin(SWIGTYPE_p_void result) {
    scaliendb_clientPINVOKE.SDBP_ResultBegin(SWIGTYPE_p_void.getCPtr(result));
  }

  public static void SDBP_ResultNext(SWIGTYPE_p_void result) {
    scaliendb_clientPINVOKE.SDBP_ResultNext(SWIGTYPE_p_void.getCPtr(result));
  }

  public static bool SDBP_ResultIsEnd(SWIGTYPE_p_void result) {
    bool ret = scaliendb_clientPINVOKE.SDBP_ResultIsEnd(SWIGTYPE_p_void.getCPtr(result));
    return ret;
  }

  public static bool SDBP_ResultIsFinished(SWIGTYPE_p_void result) {
    bool ret = scaliendb_clientPINVOKE.SDBP_ResultIsFinished(SWIGTYPE_p_void.getCPtr(result));
    return ret;
  }

  public static int SDBP_ResultTransportStatus(SWIGTYPE_p_void result) {
    int ret = scaliendb_clientPINVOKE.SDBP_ResultTransportStatus(SWIGTYPE_p_void.getCPtr(result));
    return ret;
  }

  public static int SDBP_ResultCommandStatus(SWIGTYPE_p_void result) {
    int ret = scaliendb_clientPINVOKE.SDBP_ResultCommandStatus(SWIGTYPE_p_void.getCPtr(result));
    return ret;
  }

  public static uint SDBP_ResultNumNodes(SWIGTYPE_p_void result) {
    uint ret = scaliendb_clientPINVOKE.SDBP_ResultNumNodes(SWIGTYPE_p_void.getCPtr(result));
    return ret;
  }

  public static ulong SDBP_ResultNodeID(SWIGTYPE_p_void result, uint n) {
    ulong ret = scaliendb_clientPINVOKE.SDBP_ResultNodeID(SWIGTYPE_p_void.getCPtr(result), n);
    return ret;
  }

  public static uint SDBP_ResultElapsedTime(SWIGTYPE_p_void result) {
    uint ret = scaliendb_clientPINVOKE.SDBP_ResultElapsedTime(SWIGTYPE_p_void.getCPtr(result));
    return ret;
  }

  public static SWIGTYPE_p_void SDBP_Create() {
    IntPtr cPtr = scaliendb_clientPINVOKE.SDBP_Create();
    SWIGTYPE_p_void ret = (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_void(cPtr, false);
    return ret;
  }

  public static int SDBP_Init(SWIGTYPE_p_void client, SDBP_NodeParams arg1) {
    int ret = scaliendb_clientPINVOKE.SDBP_Init(SWIGTYPE_p_void.getCPtr(client), SDBP_NodeParams.getCPtr(arg1));
    if (scaliendb_clientPINVOKE.SWIGPendingException.Pending) throw scaliendb_clientPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static void SDBP_Destroy(SWIGTYPE_p_void client) {
    scaliendb_clientPINVOKE.SDBP_Destroy(SWIGTYPE_p_void.getCPtr(client));
  }

  public static SWIGTYPE_p_void SDBP_GetResult(SWIGTYPE_p_void client) {
    IntPtr cPtr = scaliendb_clientPINVOKE.SDBP_GetResult(SWIGTYPE_p_void.getCPtr(client));
    SWIGTYPE_p_void ret = (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_void(cPtr, false);
    return ret;
  }

  public static void SDBP_SetGlobalTimeout(SWIGTYPE_p_void client, ulong timeout) {
    scaliendb_clientPINVOKE.SDBP_SetGlobalTimeout(SWIGTYPE_p_void.getCPtr(client), timeout);
  }

  public static void SDBP_SetMasterTimeout(SWIGTYPE_p_void client, ulong timeout) {
    scaliendb_clientPINVOKE.SDBP_SetMasterTimeout(SWIGTYPE_p_void.getCPtr(client), timeout);
  }

  public static ulong SDBP_GetGlobalTimeout(SWIGTYPE_p_void client) {
    ulong ret = scaliendb_clientPINVOKE.SDBP_GetGlobalTimeout(SWIGTYPE_p_void.getCPtr(client));
    return ret;
  }

  public static ulong SDBP_GetMasterTimeout(SWIGTYPE_p_void client) {
    ulong ret = scaliendb_clientPINVOKE.SDBP_GetMasterTimeout(SWIGTYPE_p_void.getCPtr(client));
    return ret;
  }

  public static ulong SDBP_GetCurrentDatabaseID(SWIGTYPE_p_void client) {
    ulong ret = scaliendb_clientPINVOKE.SDBP_GetCurrentDatabaseID(SWIGTYPE_p_void.getCPtr(client));
    return ret;
  }

  public static ulong SDBP_GetCurrentTableID(SWIGTYPE_p_void client) {
    ulong ret = scaliendb_clientPINVOKE.SDBP_GetCurrentTableID(SWIGTYPE_p_void.getCPtr(client));
    return ret;
  }

  public static string SDBP_GetJSONConfigState(SWIGTYPE_p_void client) {
    string ret = scaliendb_clientPINVOKE.SDBP_GetJSONConfigState(SWIGTYPE_p_void.getCPtr(client));
    return ret;
  }

  public static void SDBP_WaitConfigState(SWIGTYPE_p_void client) {
    scaliendb_clientPINVOKE.SDBP_WaitConfigState(SWIGTYPE_p_void.getCPtr(client));
  }

  public static void SDBP_SetConsistencyLevel(SWIGTYPE_p_void client, int consistencyLevel) {
    scaliendb_clientPINVOKE.SDBP_SetConsistencyLevel(SWIGTYPE_p_void.getCPtr(client), consistencyLevel);
  }

  public static void SDBP_SetBatchMode(SWIGTYPE_p_void client, int batchMode) {
    scaliendb_clientPINVOKE.SDBP_SetBatchMode(SWIGTYPE_p_void.getCPtr(client), batchMode);
  }

  public static void SDBP_SetBatchLimit(SWIGTYPE_p_void client, uint batchLimit) {
    scaliendb_clientPINVOKE.SDBP_SetBatchLimit(SWIGTYPE_p_void.getCPtr(client), batchLimit);
  }

  public static int SDBP_CreateQuorum(SWIGTYPE_p_void client, string name, SDBP_NodeParams arg2) {
    int ret = scaliendb_clientPINVOKE.SDBP_CreateQuorum(SWIGTYPE_p_void.getCPtr(client), name, SDBP_NodeParams.getCPtr(arg2));
    if (scaliendb_clientPINVOKE.SWIGPendingException.Pending) throw scaliendb_clientPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static int SDBP_RenameQuorum(SWIGTYPE_p_void client, ulong quorumID, string name) {
    int ret = scaliendb_clientPINVOKE.SDBP_RenameQuorum(SWIGTYPE_p_void.getCPtr(client), quorumID, name);
    if (scaliendb_clientPINVOKE.SWIGPendingException.Pending) throw scaliendb_clientPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static int SDBP_DeleteQuorum(SWIGTYPE_p_void client, ulong quorumID) {
    int ret = scaliendb_clientPINVOKE.SDBP_DeleteQuorum(SWIGTYPE_p_void.getCPtr(client), quorumID);
    return ret;
  }

  public static int SDBP_AddNode(SWIGTYPE_p_void client, ulong quorumID, ulong nodeID) {
    int ret = scaliendb_clientPINVOKE.SDBP_AddNode(SWIGTYPE_p_void.getCPtr(client), quorumID, nodeID);
    return ret;
  }

  public static int SDBP_RemoveNode(SWIGTYPE_p_void client, ulong quorumID, ulong nodeID) {
    int ret = scaliendb_clientPINVOKE.SDBP_RemoveNode(SWIGTYPE_p_void.getCPtr(client), quorumID, nodeID);
    return ret;
  }

  public static int SDBP_ActivateNode(SWIGTYPE_p_void client, ulong nodeID) {
    int ret = scaliendb_clientPINVOKE.SDBP_ActivateNode(SWIGTYPE_p_void.getCPtr(client), nodeID);
    return ret;
  }

  public static int SDBP_CreateDatabase(SWIGTYPE_p_void client, string name) {
    int ret = scaliendb_clientPINVOKE.SDBP_CreateDatabase(SWIGTYPE_p_void.getCPtr(client), name);
    if (scaliendb_clientPINVOKE.SWIGPendingException.Pending) throw scaliendb_clientPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static int SDBP_RenameDatabase(SWIGTYPE_p_void client, ulong databaseID, string name) {
    int ret = scaliendb_clientPINVOKE.SDBP_RenameDatabase(SWIGTYPE_p_void.getCPtr(client), databaseID, name);
    if (scaliendb_clientPINVOKE.SWIGPendingException.Pending) throw scaliendb_clientPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static int SDBP_DeleteDatabase(SWIGTYPE_p_void client, ulong databaseID) {
    int ret = scaliendb_clientPINVOKE.SDBP_DeleteDatabase(SWIGTYPE_p_void.getCPtr(client), databaseID);
    return ret;
  }

  public static int SDBP_CreateTable(SWIGTYPE_p_void client, ulong databaseID, ulong quorumID, string name) {
    int ret = scaliendb_clientPINVOKE.SDBP_CreateTable(SWIGTYPE_p_void.getCPtr(client), databaseID, quorumID, name);
    if (scaliendb_clientPINVOKE.SWIGPendingException.Pending) throw scaliendb_clientPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static int SDBP_RenameTable(SWIGTYPE_p_void client, ulong tableID, string name) {
    int ret = scaliendb_clientPINVOKE.SDBP_RenameTable(SWIGTYPE_p_void.getCPtr(client), tableID, name);
    if (scaliendb_clientPINVOKE.SWIGPendingException.Pending) throw scaliendb_clientPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static int SDBP_DeleteTable(SWIGTYPE_p_void client, ulong tableID) {
    int ret = scaliendb_clientPINVOKE.SDBP_DeleteTable(SWIGTYPE_p_void.getCPtr(client), tableID);
    return ret;
  }

  public static int SDBP_TruncateTable(SWIGTYPE_p_void client, ulong tableID) {
    int ret = scaliendb_clientPINVOKE.SDBP_TruncateTable(SWIGTYPE_p_void.getCPtr(client), tableID);
    return ret;
  }

  public static int SDBP_SplitShard(SWIGTYPE_p_void client, ulong shardID, string key) {
    int ret = scaliendb_clientPINVOKE.SDBP_SplitShard(SWIGTYPE_p_void.getCPtr(client), shardID, key);
    if (scaliendb_clientPINVOKE.SWIGPendingException.Pending) throw scaliendb_clientPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static int SDBP_SplitShardAuto(SWIGTYPE_p_void client, ulong shardID) {
    int ret = scaliendb_clientPINVOKE.SDBP_SplitShardAuto(SWIGTYPE_p_void.getCPtr(client), shardID);
    return ret;
  }

  public static int SDBP_FreezeTable(SWIGTYPE_p_void client, ulong tableID) {
    int ret = scaliendb_clientPINVOKE.SDBP_FreezeTable(SWIGTYPE_p_void.getCPtr(client), tableID);
    return ret;
  }

  public static int SDBP_UnfreezeTable(SWIGTYPE_p_void client, ulong tableID) {
    int ret = scaliendb_clientPINVOKE.SDBP_UnfreezeTable(SWIGTYPE_p_void.getCPtr(client), tableID);
    return ret;
  }

  public static int SDBP_MigrateShard(SWIGTYPE_p_void client, ulong shardID, ulong quorumID) {
    int ret = scaliendb_clientPINVOKE.SDBP_MigrateShard(SWIGTYPE_p_void.getCPtr(client), shardID, quorumID);
    return ret;
  }

  public static ulong SDBP_GetDatabaseID(SWIGTYPE_p_void client, string name) {
    ulong ret = scaliendb_clientPINVOKE.SDBP_GetDatabaseID(SWIGTYPE_p_void.getCPtr(client), name);
    if (scaliendb_clientPINVOKE.SWIGPendingException.Pending) throw scaliendb_clientPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static string SDBP_GetDatabaseName(SWIGTYPE_p_void client, ulong databaseID) {
    string ret = scaliendb_clientPINVOKE.SDBP_GetDatabaseName(SWIGTYPE_p_void.getCPtr(client), databaseID);
    return ret;
  }

  public static ulong SDBP_GetTableID(SWIGTYPE_p_void client, ulong databaseID, string name) {
    ulong ret = scaliendb_clientPINVOKE.SDBP_GetTableID(SWIGTYPE_p_void.getCPtr(client), databaseID, name);
    if (scaliendb_clientPINVOKE.SWIGPendingException.Pending) throw scaliendb_clientPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static int SDBP_UseDatabase(SWIGTYPE_p_void client, string name) {
    int ret = scaliendb_clientPINVOKE.SDBP_UseDatabase(SWIGTYPE_p_void.getCPtr(client), name);
    if (scaliendb_clientPINVOKE.SWIGPendingException.Pending) throw scaliendb_clientPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static int SDBP_UseDatabaseID(SWIGTYPE_p_void client, ulong databaseID) {
    int ret = scaliendb_clientPINVOKE.SDBP_UseDatabaseID(SWIGTYPE_p_void.getCPtr(client), databaseID);
    return ret;
  }

  public static int SDBP_UseTable(SWIGTYPE_p_void client, string name) {
    int ret = scaliendb_clientPINVOKE.SDBP_UseTable(SWIGTYPE_p_void.getCPtr(client), name);
    if (scaliendb_clientPINVOKE.SWIGPendingException.Pending) throw scaliendb_clientPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static int SDBP_UseTableID(SWIGTYPE_p_void client, ulong tableID) {
    int ret = scaliendb_clientPINVOKE.SDBP_UseTableID(SWIGTYPE_p_void.getCPtr(client), tableID);
    return ret;
  }

  public static uint SDBP_GetNumQuorums(SWIGTYPE_p_void client) {
    uint ret = scaliendb_clientPINVOKE.SDBP_GetNumQuorums(SWIGTYPE_p_void.getCPtr(client));
    return ret;
  }

  public static ulong SDBP_GetQuorumIDAt(SWIGTYPE_p_void client, uint n) {
    ulong ret = scaliendb_clientPINVOKE.SDBP_GetQuorumIDAt(SWIGTYPE_p_void.getCPtr(client), n);
    return ret;
  }

  public static string SDBP_GetQuorumNameAt(SWIGTYPE_p_void client, uint n) {
    string ret = scaliendb_clientPINVOKE.SDBP_GetQuorumNameAt(SWIGTYPE_p_void.getCPtr(client), n);
    return ret;
  }

  public static uint SDBP_GetNumDatabases(SWIGTYPE_p_void client) {
    uint ret = scaliendb_clientPINVOKE.SDBP_GetNumDatabases(SWIGTYPE_p_void.getCPtr(client));
    return ret;
  }

  public static ulong SDBP_GetDatabaseIDAt(SWIGTYPE_p_void client, uint n) {
    ulong ret = scaliendb_clientPINVOKE.SDBP_GetDatabaseIDAt(SWIGTYPE_p_void.getCPtr(client), n);
    return ret;
  }

  public static string SDBP_GetDatabaseNameAt(SWIGTYPE_p_void client, uint n) {
    string ret = scaliendb_clientPINVOKE.SDBP_GetDatabaseNameAt(SWIGTYPE_p_void.getCPtr(client), n);
    return ret;
  }

  public static uint SDBP_GetNumTables(SWIGTYPE_p_void client) {
    uint ret = scaliendb_clientPINVOKE.SDBP_GetNumTables(SWIGTYPE_p_void.getCPtr(client));
    return ret;
  }

  public static ulong SDBP_GetTableIDAt(SWIGTYPE_p_void client, uint n) {
    ulong ret = scaliendb_clientPINVOKE.SDBP_GetTableIDAt(SWIGTYPE_p_void.getCPtr(client), n);
    return ret;
  }

  public static string SDBP_GetTableNameAt(SWIGTYPE_p_void client, uint n) {
    string ret = scaliendb_clientPINVOKE.SDBP_GetTableNameAt(SWIGTYPE_p_void.getCPtr(client), n);
    return ret;
  }

  public static uint SDBP_GetNumShards(SWIGTYPE_p_void client) {
    uint ret = scaliendb_clientPINVOKE.SDBP_GetNumShards(SWIGTYPE_p_void.getCPtr(client));
    return ret;
  }

  public static ulong SDBP_GetShardIDAt(SWIGTYPE_p_void client, uint n) {
    ulong ret = scaliendb_clientPINVOKE.SDBP_GetShardIDAt(SWIGTYPE_p_void.getCPtr(client), n);
    return ret;
  }

  public static int SDBP_Get(SWIGTYPE_p_void client, string key) {
    int ret = scaliendb_clientPINVOKE.SDBP_Get(SWIGTYPE_p_void.getCPtr(client), key);
    if (scaliendb_clientPINVOKE.SWIGPendingException.Pending) throw scaliendb_clientPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static int SDBP_GetCStr(SWIGTYPE_p_void client, byte[] key, int len) {
    int ret = scaliendb_clientPINVOKE.SDBP_GetCStr(SWIGTYPE_p_void.getCPtr(client), key, len);
    return ret;
  }

  public static int SDBP_Set(SWIGTYPE_p_void client, string key, string value) {
    int ret = scaliendb_clientPINVOKE.SDBP_Set(SWIGTYPE_p_void.getCPtr(client), key, value);
    if (scaliendb_clientPINVOKE.SWIGPendingException.Pending) throw scaliendb_clientPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static int SDBP_SetCStr(SWIGTYPE_p_void client_, byte[] key, int lenKey, byte[] value, int lenValue) {
    int ret = scaliendb_clientPINVOKE.SDBP_SetCStr(SWIGTYPE_p_void.getCPtr(client_), key, lenKey, value, lenValue);
    return ret;
  }

  public static int SDBP_SetIfNotExists(SWIGTYPE_p_void client, string key, string value) {
    int ret = scaliendb_clientPINVOKE.SDBP_SetIfNotExists(SWIGTYPE_p_void.getCPtr(client), key, value);
    if (scaliendb_clientPINVOKE.SWIGPendingException.Pending) throw scaliendb_clientPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static int SDBP_SetIfNotExistsCStr(SWIGTYPE_p_void client, byte[] key, int lenKey, byte[] value, int lenValue) {
    int ret = scaliendb_clientPINVOKE.SDBP_SetIfNotExistsCStr(SWIGTYPE_p_void.getCPtr(client), key, lenKey, value, lenValue);
    return ret;
  }

  public static int SDBP_TestAndSet(SWIGTYPE_p_void client, string key, string test, string value) {
    int ret = scaliendb_clientPINVOKE.SDBP_TestAndSet(SWIGTYPE_p_void.getCPtr(client), key, test, value);
    if (scaliendb_clientPINVOKE.SWIGPendingException.Pending) throw scaliendb_clientPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static int SDBP_TestAndSetCStr(SWIGTYPE_p_void client, byte[] key, int lenKey, byte[] test, int lenTest, byte[] value, int lenValue) {
    int ret = scaliendb_clientPINVOKE.SDBP_TestAndSetCStr(SWIGTYPE_p_void.getCPtr(client), key, lenKey, test, lenTest, value, lenValue);
    return ret;
  }

  public static int SDBP_GetAndSet(SWIGTYPE_p_void client, string key, string value) {
    int ret = scaliendb_clientPINVOKE.SDBP_GetAndSet(SWIGTYPE_p_void.getCPtr(client), key, value);
    if (scaliendb_clientPINVOKE.SWIGPendingException.Pending) throw scaliendb_clientPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static int SDBP_GetAndSetCStr(SWIGTYPE_p_void client, byte[] key, int lenKey, byte[] value, int lenValue) {
    int ret = scaliendb_clientPINVOKE.SDBP_GetAndSetCStr(SWIGTYPE_p_void.getCPtr(client), key, lenKey, value, lenValue);
    return ret;
  }

  public static int SDBP_Add(SWIGTYPE_p_void client, string key, long number) {
    int ret = scaliendb_clientPINVOKE.SDBP_Add(SWIGTYPE_p_void.getCPtr(client), key, number);
    if (scaliendb_clientPINVOKE.SWIGPendingException.Pending) throw scaliendb_clientPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static int SDBP_AddCStr(SWIGTYPE_p_void client_, byte[] key, int len, long number) {
    int ret = scaliendb_clientPINVOKE.SDBP_AddCStr(SWIGTYPE_p_void.getCPtr(client_), key, len, number);
    return ret;
  }

  public static int SDBP_Append(SWIGTYPE_p_void client, string key, string value) {
    int ret = scaliendb_clientPINVOKE.SDBP_Append(SWIGTYPE_p_void.getCPtr(client), key, value);
    if (scaliendb_clientPINVOKE.SWIGPendingException.Pending) throw scaliendb_clientPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static int SDBP_AppendCStr(SWIGTYPE_p_void client_, byte[] key, int lenKey, byte[] value, int lenValue) {
    int ret = scaliendb_clientPINVOKE.SDBP_AppendCStr(SWIGTYPE_p_void.getCPtr(client_), key, lenKey, value, lenValue);
    return ret;
  }

  public static int SDBP_Delete(SWIGTYPE_p_void client, string key) {
    int ret = scaliendb_clientPINVOKE.SDBP_Delete(SWIGTYPE_p_void.getCPtr(client), key);
    if (scaliendb_clientPINVOKE.SWIGPendingException.Pending) throw scaliendb_clientPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static int SDBP_DeleteCStr(SWIGTYPE_p_void client_, byte[] key, int len) {
    int ret = scaliendb_clientPINVOKE.SDBP_DeleteCStr(SWIGTYPE_p_void.getCPtr(client_), key, len);
    return ret;
  }

  public static int SDBP_TestAndDelete(SWIGTYPE_p_void client, string key, string test) {
    int ret = scaliendb_clientPINVOKE.SDBP_TestAndDelete(SWIGTYPE_p_void.getCPtr(client), key, test);
    if (scaliendb_clientPINVOKE.SWIGPendingException.Pending) throw scaliendb_clientPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static int SDBP_TestAndDeleteCStr(SWIGTYPE_p_void client_, byte[] key, int keylen, byte[] test, int testlen) {
    int ret = scaliendb_clientPINVOKE.SDBP_TestAndDeleteCStr(SWIGTYPE_p_void.getCPtr(client_), key, keylen, test, testlen);
    return ret;
  }

  public static int SDBP_Remove(SWIGTYPE_p_void client, string key) {
    int ret = scaliendb_clientPINVOKE.SDBP_Remove(SWIGTYPE_p_void.getCPtr(client), key);
    if (scaliendb_clientPINVOKE.SWIGPendingException.Pending) throw scaliendb_clientPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static int SDBP_RemoveCStr(SWIGTYPE_p_void client_, byte[] key, int len) {
    int ret = scaliendb_clientPINVOKE.SDBP_RemoveCStr(SWIGTYPE_p_void.getCPtr(client_), key, len);
    return ret;
  }

  public static int SDBP_ListKeys(SWIGTYPE_p_void client, string startKey, string endKey, string prefix, uint count, bool skip) {
    int ret = scaliendb_clientPINVOKE.SDBP_ListKeys(SWIGTYPE_p_void.getCPtr(client), startKey, endKey, prefix, count, skip);
    if (scaliendb_clientPINVOKE.SWIGPendingException.Pending) throw scaliendb_clientPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static int SDBP_ListKeysCStr(SWIGTYPE_p_void client, byte[] startKey, int startKeyLen, byte[] endKey, int endKeyLen, byte[] prefix, int prefixLen, uint count, bool skip) {
    int ret = scaliendb_clientPINVOKE.SDBP_ListKeysCStr(SWIGTYPE_p_void.getCPtr(client), startKey, startKeyLen, endKey, endKeyLen, prefix, prefixLen, count, skip);
    return ret;
  }

  public static int SDBP_ListKeyValues(SWIGTYPE_p_void client, string startKey, string endKey, string prefix, uint count, bool skip) {
    int ret = scaliendb_clientPINVOKE.SDBP_ListKeyValues(SWIGTYPE_p_void.getCPtr(client), startKey, endKey, prefix, count, skip);
    if (scaliendb_clientPINVOKE.SWIGPendingException.Pending) throw scaliendb_clientPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static int SDBP_ListKeyValuesCStr(SWIGTYPE_p_void client, byte[] startKey, int startKeyLen, byte[] endKey, int endKeyLen, byte[] prefix, int prefixLen, uint count, bool skip) {
    int ret = scaliendb_clientPINVOKE.SDBP_ListKeyValuesCStr(SWIGTYPE_p_void.getCPtr(client), startKey, startKeyLen, endKey, endKeyLen, prefix, prefixLen, count, skip);
    return ret;
  }

  public static int SDBP_Count(SWIGTYPE_p_void client, string startKey, string endKey, string prefix) {
    int ret = scaliendb_clientPINVOKE.SDBP_Count(SWIGTYPE_p_void.getCPtr(client), startKey, endKey, prefix);
    if (scaliendb_clientPINVOKE.SWIGPendingException.Pending) throw scaliendb_clientPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static int SDBP_CountCStr(SWIGTYPE_p_void client, byte[] startKey, int startKeyLen, byte[] endKey, int endKeyLen, byte[] prefix, int prefixLen) {
    int ret = scaliendb_clientPINVOKE.SDBP_CountCStr(SWIGTYPE_p_void.getCPtr(client), startKey, startKeyLen, endKey, endKeyLen, prefix, prefixLen);
    return ret;
  }

  public static int SDBP_Begin(SWIGTYPE_p_void client) {
    int ret = scaliendb_clientPINVOKE.SDBP_Begin(SWIGTYPE_p_void.getCPtr(client));
    return ret;
  }

  public static int SDBP_Submit(SWIGTYPE_p_void client) {
    int ret = scaliendb_clientPINVOKE.SDBP_Submit(SWIGTYPE_p_void.getCPtr(client));
    return ret;
  }

  public static int SDBP_Cancel(SWIGTYPE_p_void client) {
    int ret = scaliendb_clientPINVOKE.SDBP_Cancel(SWIGTYPE_p_void.getCPtr(client));
    return ret;
  }

  public static void SDBP_SetTrace(bool trace) {
    scaliendb_clientPINVOKE.SDBP_SetTrace(trace);
  }

  public static string SDBP_GetVersion() {
    string ret = scaliendb_clientPINVOKE.SDBP_GetVersion();
    return ret;
  }

  public static string SDBP_GetDebugString() {
    string ret = scaliendb_clientPINVOKE.SDBP_GetDebugString();
    return ret;
  }

}

}
